{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Bhargav Ayare/Documents/GitHub/invoice2/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _createClass from \"C:/Users/Bhargav Ayare/Documents/GitHub/invoice2/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"C:/Users/Bhargav Ayare/Documents/GitHub/invoice2/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _regeneratorRuntime from \"C:/Users/Bhargav Ayare/Documents/GitHub/invoice2/node_modules/@babel/runtime/regenerator/index.js\";\n/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * A plugin, designed to be used with PrecacheController, to determine the\n * of assets that were updated (or not updated) during the install event.\n *\n * @private\n */\nvar PrecacheInstallReportPlugin = /*#__PURE__*/_createClass(function PrecacheInstallReportPlugin() {\n  var _this = this;\n  _classCallCheck(this, PrecacheInstallReportPlugin);\n  this.updatedURLs = [];\n  this.notUpdatedURLs = [];\n  this.handlerWillStart = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n      var request, state;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              request = _ref.request, state = _ref.state;\n              // TODO: `state` should never be undefined...\n              if (state) {\n                state.originalRequest = request;\n              }\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return function (_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  this.cachedResponseWillBeUsed = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref3) {\n      var event, state, cachedResponse, url;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              event = _ref3.event, state = _ref3.state, cachedResponse = _ref3.cachedResponse;\n              if (event.type === 'install') {\n                if (state && state.originalRequest && state.originalRequest instanceof Request) {\n                  // TODO: `state` should never be undefined...\n                  url = state.originalRequest.url;\n                  if (cachedResponse) {\n                    _this.notUpdatedURLs.push(url);\n                  } else {\n                    _this.updatedURLs.push(url);\n                  }\n                }\n              }\n              return _context2.abrupt(\"return\", cachedResponse);\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return function (_x2) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n});\nexport { PrecacheInstallReportPlugin };","map":{"version":3,"names":["PrecacheInstallReportPlugin","_createClass","_this","_classCallCheck","updatedURLs","notUpdatedURLs","handlerWillStart","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_ref","request","state","wrap","_callee$","_context","prev","next","originalRequest","stop","_x","apply","arguments","cachedResponseWillBeUsed","_ref4","_callee2","_ref3","event","cachedResponse","url","_callee2$","_context2","type","Request","push","abrupt","_x2"],"sources":["C:/Users/Bhargav Ayare/Documents/GitHub/invoice2/node_modules/workbox-precaching/utils/PrecacheInstallReportPlugin.js"],"sourcesContent":["/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * A plugin, designed to be used with PrecacheController, to determine the\n * of assets that were updated (or not updated) during the install event.\n *\n * @private\n */\nclass PrecacheInstallReportPlugin {\n    constructor() {\n        this.updatedURLs = [];\n        this.notUpdatedURLs = [];\n        this.handlerWillStart = async ({ request, state, }) => {\n            // TODO: `state` should never be undefined...\n            if (state) {\n                state.originalRequest = request;\n            }\n        };\n        this.cachedResponseWillBeUsed = async ({ event, state, cachedResponse, }) => {\n            if (event.type === 'install') {\n                if (state &&\n                    state.originalRequest &&\n                    state.originalRequest instanceof Request) {\n                    // TODO: `state` should never be undefined...\n                    const url = state.originalRequest.url;\n                    if (cachedResponse) {\n                        this.notUpdatedURLs.push(url);\n                    }\n                    else {\n                        this.updatedURLs.push(url);\n                    }\n                }\n            }\n            return cachedResponse;\n        };\n    }\n}\nexport { PrecacheInstallReportPlugin };\n"],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,gBAAgB;AACvB;AACA;AACA;AACA;AACA;AACA;AALA,IAMMA,2BAA2B,gBAAAC,YAAA,CAC7B,SAAAD,4BAAA,EAAc;EAAA,IAAAE,KAAA;EAAAC,eAAA,OAAAH,2BAAA;EACV,IAAI,CAACI,WAAW,GAAG,EAAE;EACrB,IAAI,CAACC,cAAc,GAAG,EAAE;EACxB,IAAI,CAACC,gBAAgB;IAAA,IAAAC,KAAA,GAAAC,iBAAA,eAAAC,mBAAA,CAAAC,IAAA,CAAG,SAAAC,QAAAC,IAAA;MAAA,IAAAC,OAAA,EAAAC,KAAA;MAAA,OAAAL,mBAAA,CAAAM,IAAA,UAAAC,SAAAC,QAAA;QAAA;UAAA,QAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAASN,OAAO,GAAAD,IAAA,CAAPC,OAAO,EAAEC,KAAK,GAAAF,IAAA,CAALE,KAAK;cAC3C;cACA,IAAIA,KAAK,EAAE;gBACPA,KAAK,CAACM,eAAe,GAAGP,OAAO;cACnC;YAAC;YAAA;cAAA,OAAAI,QAAA,CAAAI,IAAA;UAAA;QAAA;MAAA,GAAAV,OAAA;IAAA,CACJ;IAAA,iBAAAW,EAAA;MAAA,OAAAf,KAAA,CAAAgB,KAAA,OAAAC,SAAA;IAAA;EAAA;EACD,IAAI,CAACC,wBAAwB;IAAA,IAAAC,KAAA,GAAAlB,iBAAA,eAAAC,mBAAA,CAAAC,IAAA,CAAG,SAAAiB,SAAAC,KAAA;MAAA,IAAAC,KAAA,EAAAf,KAAA,EAAAgB,cAAA,EAAAC,GAAA;MAAA,OAAAtB,mBAAA,CAAAM,IAAA,UAAAiB,UAAAC,SAAA;QAAA;UAAA,QAAAA,SAAA,CAAAf,IAAA,GAAAe,SAAA,CAAAd,IAAA;YAAA;cAASU,KAAK,GAAAD,KAAA,CAALC,KAAK,EAAEf,KAAK,GAAAc,KAAA,CAALd,KAAK,EAAEgB,cAAc,GAAAF,KAAA,CAAdE,cAAc;cACjE,IAAID,KAAK,CAACK,IAAI,KAAK,SAAS,EAAE;gBAC1B,IAAIpB,KAAK,IACLA,KAAK,CAACM,eAAe,IACrBN,KAAK,CAACM,eAAe,YAAYe,OAAO,EAAE;kBAC1C;kBACMJ,GAAG,GAAGjB,KAAK,CAACM,eAAe,CAACW,GAAG;kBACrC,IAAID,cAAc,EAAE;oBAChB5B,KAAI,CAACG,cAAc,CAAC+B,IAAI,CAACL,GAAG,CAAC;kBACjC,CAAC,MACI;oBACD7B,KAAI,CAACE,WAAW,CAACgC,IAAI,CAACL,GAAG,CAAC;kBAC9B;gBACJ;cACJ;cAAC,OAAAE,SAAA,CAAAI,MAAA,WACMP,cAAc;YAAA;YAAA;cAAA,OAAAG,SAAA,CAAAZ,IAAA;UAAA;QAAA;MAAA,GAAAM,QAAA;IAAA,CACxB;IAAA,iBAAAW,GAAA;MAAA,OAAAZ,KAAA,CAAAH,KAAA,OAAAC,SAAA;IAAA;EAAA;AACL,CAAC;AAEL,SAASxB,2BAA2B"},"metadata":{},"sourceType":"module"}