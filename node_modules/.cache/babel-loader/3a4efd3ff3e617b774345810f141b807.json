{"ast":null,"code":"import _createForOfIteratorHelper from \"C:/Users/Bhargav Ayare/Documents/GitHub/invoice2/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _regeneratorRuntime from \"C:/Users/Bhargav Ayare/Documents/GitHub/invoice2/node_modules/@babel/runtime/regenerator/index.js\";\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(generateURLVariations);\n/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { removeIgnoredSearchParams } from './removeIgnoredSearchParams.js';\nimport '../_version.js';\n/**\n * Generator function that yields possible variations on the original URL to\n * check, one at a time.\n *\n * @param {string} url\n * @param {Object} options\n *\n * @private\n * @memberof workbox-precaching\n */\nexport function generateURLVariations(url) {\n  var _ref,\n    _ref$ignoreURLParamet,\n    ignoreURLParametersMatching,\n    _ref$directoryIndex,\n    directoryIndex,\n    _ref$cleanURLs,\n    cleanURLs,\n    urlManipulation,\n    urlObject,\n    urlWithoutIgnoredParams,\n    directoryURL,\n    cleanURL,\n    additionalURLs,\n    _iterator,\n    _step,\n    urlToAttempt,\n    _args = arguments;\n  return _regeneratorRuntime.wrap(function generateURLVariations$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _ref = _args.length > 1 && _args[1] !== undefined ? _args[1] : {}, _ref$ignoreURLParamet = _ref.ignoreURLParametersMatching, ignoreURLParametersMatching = _ref$ignoreURLParamet === void 0 ? [/^utm_/, /^fbclid$/] : _ref$ignoreURLParamet, _ref$directoryIndex = _ref.directoryIndex, directoryIndex = _ref$directoryIndex === void 0 ? 'index.html' : _ref$directoryIndex, _ref$cleanURLs = _ref.cleanURLs, cleanURLs = _ref$cleanURLs === void 0 ? true : _ref$cleanURLs, urlManipulation = _ref.urlManipulation;\n          urlObject = new URL(url, location.href);\n          urlObject.hash = '';\n          _context.next = 5;\n          return urlObject.href;\n        case 5:\n          urlWithoutIgnoredParams = removeIgnoredSearchParams(urlObject, ignoreURLParametersMatching);\n          _context.next = 8;\n          return urlWithoutIgnoredParams.href;\n        case 8:\n          if (!(directoryIndex && urlWithoutIgnoredParams.pathname.endsWith('/'))) {\n            _context.next = 13;\n            break;\n          }\n          directoryURL = new URL(urlWithoutIgnoredParams.href);\n          directoryURL.pathname += directoryIndex;\n          _context.next = 13;\n          return directoryURL.href;\n        case 13:\n          if (!cleanURLs) {\n            _context.next = 18;\n            break;\n          }\n          cleanURL = new URL(urlWithoutIgnoredParams.href);\n          cleanURL.pathname += '.html';\n          _context.next = 18;\n          return cleanURL.href;\n        case 18:\n          if (!urlManipulation) {\n            _context.next = 37;\n            break;\n          }\n          additionalURLs = urlManipulation({\n            url: urlObject\n          });\n          _iterator = _createForOfIteratorHelper(additionalURLs);\n          _context.prev = 21;\n          _iterator.s();\n        case 23:\n          if ((_step = _iterator.n()).done) {\n            _context.next = 29;\n            break;\n          }\n          urlToAttempt = _step.value;\n          _context.next = 27;\n          return urlToAttempt.href;\n        case 27:\n          _context.next = 23;\n          break;\n        case 29:\n          _context.next = 34;\n          break;\n        case 31:\n          _context.prev = 31;\n          _context.t0 = _context[\"catch\"](21);\n          _iterator.e(_context.t0);\n        case 34:\n          _context.prev = 34;\n          _iterator.f();\n          return _context.finish(34);\n        case 37:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[21, 31, 34, 37]]);\n}","map":{"version":3,"names":["generateURLVariations","removeIgnoredSearchParams","url","_ref","_ref$ignoreURLParamet","ignoreURLParametersMatching","_ref$directoryIndex","directoryIndex","_ref$cleanURLs","cleanURLs","urlManipulation","urlObject","urlWithoutIgnoredParams","directoryURL","cleanURL","additionalURLs","_iterator","_step","urlToAttempt","_args","arguments","_regeneratorRuntime","wrap","generateURLVariations$","_context","prev","next","length","undefined","URL","location","href","hash","pathname","endsWith","_createForOfIteratorHelper","s","n","done","value","t0","e","f","finish","stop","_marked"],"sources":["C:/Users/Bhargav Ayare/Documents/GitHub/invoice2/node_modules/workbox-precaching/utils/generateURLVariations.js"],"sourcesContent":["/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { removeIgnoredSearchParams } from './removeIgnoredSearchParams.js';\nimport '../_version.js';\n/**\n * Generator function that yields possible variations on the original URL to\n * check, one at a time.\n *\n * @param {string} url\n * @param {Object} options\n *\n * @private\n * @memberof workbox-precaching\n */\nexport function* generateURLVariations(url, { ignoreURLParametersMatching = [/^utm_/, /^fbclid$/], directoryIndex = 'index.html', cleanURLs = true, urlManipulation, } = {}) {\n    const urlObject = new URL(url, location.href);\n    urlObject.hash = '';\n    yield urlObject.href;\n    const urlWithoutIgnoredParams = removeIgnoredSearchParams(urlObject, ignoreURLParametersMatching);\n    yield urlWithoutIgnoredParams.href;\n    if (directoryIndex && urlWithoutIgnoredParams.pathname.endsWith('/')) {\n        const directoryURL = new URL(urlWithoutIgnoredParams.href);\n        directoryURL.pathname += directoryIndex;\n        yield directoryURL.href;\n    }\n    if (cleanURLs) {\n        const cleanURL = new URL(urlWithoutIgnoredParams.href);\n        cleanURL.pathname += '.html';\n        yield cleanURL.href;\n    }\n    if (urlManipulation) {\n        const additionalURLs = urlManipulation({ url: urlObject });\n        for (const urlToAttempt of additionalURLs) {\n            yield urlToAttempt.href;\n        }\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}