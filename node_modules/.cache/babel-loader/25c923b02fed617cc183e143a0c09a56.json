{"ast":null,"code":"import _createForOfIteratorHelper from \"C:/Users/Bhargav Ayare/Documents/GitHub/invoice2/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _asyncToGenerator from \"C:/Users/Bhargav Ayare/Documents/GitHub/invoice2/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _regeneratorRuntime from \"C:/Users/Bhargav Ayare/Documents/GitHub/invoice2/node_modules/@babel/runtime/regenerator/index.js\";\n/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from '../_private/logger.js';\nimport { quotaErrorCallbacks } from '../models/quotaErrorCallbacks.js';\nimport '../_version.js';\n/**\n * Runs all of the callback functions, one at a time sequentially, in the order\n * in which they were registered.\n *\n * @memberof workbox-core\n * @private\n */\nfunction executeQuotaErrorCallbacks() {\n  return _executeQuotaErrorCallbacks.apply(this, arguments);\n}\nfunction _executeQuotaErrorCallbacks() {\n  _executeQuotaErrorCallbacks = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var _iterator, _step, callback;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (process.env.NODE_ENV !== 'production') {\n              logger.log(\"About to run \".concat(quotaErrorCallbacks.size, \" \") + \"callbacks to clean up caches.\");\n            }\n            _iterator = _createForOfIteratorHelper(quotaErrorCallbacks);\n            _context.prev = 2;\n            _iterator.s();\n          case 4:\n            if ((_step = _iterator.n()).done) {\n              _context.next = 11;\n              break;\n            }\n            callback = _step.value;\n            _context.next = 8;\n            return callback();\n          case 8:\n            if (process.env.NODE_ENV !== 'production') {\n              logger.log(callback, 'is complete.');\n            }\n          case 9:\n            _context.next = 4;\n            break;\n          case 11:\n            _context.next = 16;\n            break;\n          case 13:\n            _context.prev = 13;\n            _context.t0 = _context[\"catch\"](2);\n            _iterator.e(_context.t0);\n          case 16:\n            _context.prev = 16;\n            _iterator.f();\n            return _context.finish(16);\n          case 19:\n            if (process.env.NODE_ENV !== 'production') {\n              logger.log('Finished running callbacks.');\n            }\n          case 20:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[2, 13, 16, 19]]);\n  }));\n  return _executeQuotaErrorCallbacks.apply(this, arguments);\n}\nexport { executeQuotaErrorCallbacks };","map":{"version":3,"names":["logger","quotaErrorCallbacks","executeQuotaErrorCallbacks","_executeQuotaErrorCallbacks","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_iterator","_step","callback","wrap","_callee$","_context","prev","next","process","env","NODE_ENV","log","concat","size","_createForOfIteratorHelper","s","n","done","value","t0","e","f","finish","stop"],"sources":["C:/Users/Bhargav Ayare/Documents/GitHub/invoice2/node_modules/workbox-core/_private/executeQuotaErrorCallbacks.js"],"sourcesContent":["/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from '../_private/logger.js';\nimport { quotaErrorCallbacks } from '../models/quotaErrorCallbacks.js';\nimport '../_version.js';\n/**\n * Runs all of the callback functions, one at a time sequentially, in the order\n * in which they were registered.\n *\n * @memberof workbox-core\n * @private\n */\nasync function executeQuotaErrorCallbacks() {\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log(`About to run ${quotaErrorCallbacks.size} ` +\n            `callbacks to clean up caches.`);\n    }\n    for (const callback of quotaErrorCallbacks) {\n        await callback();\n        if (process.env.NODE_ENV !== 'production') {\n            logger.log(callback, 'is complete.');\n        }\n    }\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log('Finished running callbacks.');\n    }\n}\nexport { executeQuotaErrorCallbacks };\n"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,MAAM,QAAQ,uBAAuB;AAC9C,SAASC,mBAAmB,QAAQ,kCAAkC;AACtE,OAAO,gBAAgB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AANA,SAOeC,0BAA0BA,CAAA;EAAA,OAAAC,2BAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAF,4BAAA;EAAAA,2BAAA,GAAAG,iBAAA,eAAAC,mBAAA,CAAAC,IAAA,CAAzC,SAAAC,QAAA;IAAA,IAAAC,SAAA,EAAAC,KAAA,EAAAC,QAAA;IAAA,OAAAL,mBAAA,CAAAM,IAAA,UAAAC,SAAAC,QAAA;MAAA;QAAA,QAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;UAAA;YACI,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;cACvCpB,MAAM,CAACqB,GAAG,CAAC,gBAAAC,MAAA,CAAgBrB,mBAAmB,CAACsB,IAAI,wCAChB,CAAC;YACxC;YAACb,SAAA,GAAAc,0BAAA,CACsBvB,mBAAmB;YAAAc,QAAA,CAAAC,IAAA;YAAAN,SAAA,CAAAe,CAAA;UAAA;YAAA,KAAAd,KAAA,GAAAD,SAAA,CAAAgB,CAAA,IAAAC,IAAA;cAAAZ,QAAA,CAAAE,IAAA;cAAA;YAAA;YAA/BL,QAAQ,GAAAD,KAAA,CAAAiB,KAAA;YAAAb,QAAA,CAAAE,IAAA;YAAA,OACTL,QAAQ,EAAE;UAAA;YAChB,IAAIM,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;cACvCpB,MAAM,CAACqB,GAAG,CAACT,QAAQ,EAAE,cAAc,CAAC;YACxC;UAAC;YAAAG,QAAA,CAAAE,IAAA;YAAA;UAAA;YAAAF,QAAA,CAAAE,IAAA;YAAA;UAAA;YAAAF,QAAA,CAAAC,IAAA;YAAAD,QAAA,CAAAc,EAAA,GAAAd,QAAA;YAAAL,SAAA,CAAAoB,CAAA,CAAAf,QAAA,CAAAc,EAAA;UAAA;YAAAd,QAAA,CAAAC,IAAA;YAAAN,SAAA,CAAAqB,CAAA;YAAA,OAAAhB,QAAA,CAAAiB,MAAA;UAAA;YAEL,IAAId,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;cACvCpB,MAAM,CAACqB,GAAG,CAAC,6BAA6B,CAAC;YAC7C;UAAC;UAAA;YAAA,OAAAN,QAAA,CAAAkB,IAAA;QAAA;MAAA;IAAA,GAAAxB,OAAA;EAAA,CACJ;EAAA,OAAAN,2BAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AACD,SAASH,0BAA0B"},"metadata":{},"sourceType":"module"}