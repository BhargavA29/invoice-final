{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/Bhargav Ayare/Documents/GitHub/invoice2/node_modules/@babel/runtime/regenerator/index.js\";\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport { getBlobFromURL } from './getBlobFromURL';\nimport { clonePseudoElements } from './clonePseudoElements';\nimport { createImage, getMimeType, makeDataUrl, toArray } from './util';\nfunction cloneCanvasElement(node) {\n  return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var dataURL;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            dataURL = node.toDataURL();\n            if (!(dataURL === 'data:,')) {\n              _context.next = 3;\n              break;\n            }\n            return _context.abrupt(\"return\", Promise.resolve(node.cloneNode(false)));\n          case 3:\n            return _context.abrupt(\"return\", createImage(dataURL));\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n}\nfunction cloneVideoElement(node, options) {\n  return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            return _context2.abrupt(\"return\", Promise.resolve(node.poster).then(function (url) {\n              return getBlobFromURL(url, options);\n            }).then(function (data) {\n              return makeDataUrl(data.blob, getMimeType(node.poster) || data.contentType);\n            }).then(function (dataURL) {\n              return createImage(dataURL);\n            }));\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n}\nfunction cloneSingleNode(node, options) {\n  return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            if (!(node instanceof HTMLCanvasElement)) {\n              _context3.next = 2;\n              break;\n            }\n            return _context3.abrupt(\"return\", cloneCanvasElement(node));\n          case 2:\n            if (!(node instanceof HTMLVideoElement && node.poster)) {\n              _context3.next = 4;\n              break;\n            }\n            return _context3.abrupt(\"return\", cloneVideoElement(node, options));\n          case 4:\n            return _context3.abrupt(\"return\", Promise.resolve(node.cloneNode(false)));\n          case 5:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n}\nvar isSlotElement = function isSlotElement(node) {\n  return node.tagName != null && node.tagName.toUpperCase() === 'SLOT';\n};\nfunction cloneChildren(nativeNode, clonedNode, options) {\n  var _a;\n  return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n    var children;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            children = isSlotElement(nativeNode) && nativeNode.assignedNodes ? toArray(nativeNode.assignedNodes()) : toArray(((_a = nativeNode.shadowRoot) !== null && _a !== void 0 ? _a : nativeNode).childNodes);\n            if (!(children.length === 0 || nativeNode instanceof HTMLVideoElement)) {\n              _context4.next = 3;\n              break;\n            }\n            return _context4.abrupt(\"return\", Promise.resolve(clonedNode));\n          case 3:\n            return _context4.abrupt(\"return\", children.reduce(function (deferred, child) {\n              return deferred\n              // eslint-disable-next-line no-use-before-define\n              .then(function () {\n                return cloneNode(child, options);\n              }).then(function (clonedChild) {\n                // eslint-disable-next-line promise/always-return\n                if (clonedChild) {\n                  clonedNode.appendChild(clonedChild);\n                }\n              });\n            }, Promise.resolve()).then(function () {\n              return clonedNode;\n            }));\n          case 4:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n}\nfunction cloneCSSStyle(nativeNode, clonedNode) {\n  var source = window.getComputedStyle(nativeNode);\n  var target = clonedNode.style;\n  if (!target) {\n    return;\n  }\n  if (source.cssText) {\n    target.cssText = source.cssText;\n  } else {\n    toArray(source).forEach(function (name) {\n      target.setProperty(name, source.getPropertyValue(name), source.getPropertyPriority(name));\n    });\n  }\n}\nfunction cloneInputValue(nativeNode, clonedNode) {\n  if (nativeNode instanceof HTMLTextAreaElement) {\n    clonedNode.innerHTML = nativeNode.value;\n  }\n  if (nativeNode instanceof HTMLInputElement) {\n    clonedNode.setAttribute('value', nativeNode.value);\n  }\n}\nfunction decorate(nativeNode, clonedNode) {\n  return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            if (clonedNode instanceof Element) {\n              _context5.next = 2;\n              break;\n            }\n            return _context5.abrupt(\"return\", Promise.resolve(clonedNode));\n          case 2:\n            return _context5.abrupt(\"return\", Promise.resolve().then(function () {\n              return cloneCSSStyle(nativeNode, clonedNode);\n            }).then(function () {\n              return clonePseudoElements(nativeNode, clonedNode);\n            }).then(function () {\n              return cloneInputValue(nativeNode, clonedNode);\n            }).then(function () {\n              return clonedNode;\n            }));\n          case 3:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n}\nexport function cloneNode(node, options, isRoot) {\n  return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            if (!(!isRoot && options.filter && !options.filter(node))) {\n              _context6.next = 2;\n              break;\n            }\n            return _context6.abrupt(\"return\", Promise.resolve(null));\n          case 2:\n            return _context6.abrupt(\"return\", Promise.resolve(node).then(function (clonedNode) {\n              return cloneSingleNode(clonedNode, options);\n            }).then(function (clonedNode) {\n              return cloneChildren(node, clonedNode, options);\n            }).then(function (clonedNode) {\n              return decorate(node, clonedNode);\n            }));\n          case 3:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n}","map":{"version":3,"mappings":"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","names":["getBlobFromURL","clonePseudoElements","createImage","getMimeType","makeDataUrl","toArray","cloneCanvasElement","node","dataURL","toDataURL","_context","Promise","resolve","cloneNode","cloneVideoElement","options","poster","then","url","data","blob","contentType","cloneSingleNode","HTMLCanvasElement","_context3","HTMLVideoElement","isSlotElement","tagName","toUpperCase","cloneChildren","nativeNode","clonedNode","children","assignedNodes","shadowRoot","childNodes","length","_context4","reduce","deferred","child","clonedChild","appendChild","cloneCSSStyle","source","window","getComputedStyle","target","style","cssText","forEach","name","setProperty","getPropertyValue","getPropertyPriority","cloneInputValue","HTMLTextAreaElement","innerHTML","value","HTMLInputElement","setAttribute","decorate","Element","_context5","isRoot","filter","_context6"],"sources":["../src/cloneNode.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}