{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Bhargav Ayare/Documents/GitHub/invoice2/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _regeneratorRuntime from \"C:/Users/Bhargav Ayare/Documents/GitHub/invoice2/node_modules/@babel/runtime/regenerator/index.js\";\n/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nexport var cacheOkAndOpaquePlugin = {\n  /**\n   * Returns a valid response (to allow caching) if the status is 200 (OK) or\n   * 0 (opaque).\n   *\n   * @param {Object} options\n   * @param {Response} options.response\n   * @return {Response|null}\n   *\n   * @private\n   */\n  cacheWillUpdate: function () {\n    var _cacheWillUpdate = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              response = _ref.response;\n              if (!(response.status === 200 || response.status === 0)) {\n                _context.next = 3;\n                break;\n              }\n              return _context.abrupt(\"return\", response);\n            case 3:\n              return _context.abrupt(\"return\", null);\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    function cacheWillUpdate(_x) {\n      return _cacheWillUpdate.apply(this, arguments);\n    }\n    return cacheWillUpdate;\n  }()\n};","map":{"version":3,"names":["cacheOkAndOpaquePlugin","cacheWillUpdate","_cacheWillUpdate","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_ref","response","wrap","_callee$","_context","prev","next","status","abrupt","stop","_x","apply","arguments"],"sources":["C:/Users/Bhargav Ayare/Documents/GitHub/invoice2/node_modules/workbox-strategies/plugins/cacheOkAndOpaquePlugin.js"],"sourcesContent":["/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nexport const cacheOkAndOpaquePlugin = {\n    /**\n     * Returns a valid response (to allow caching) if the status is 200 (OK) or\n     * 0 (opaque).\n     *\n     * @param {Object} options\n     * @param {Response} options.response\n     * @return {Response|null}\n     *\n     * @private\n     */\n    cacheWillUpdate: async ({ response }) => {\n        if (response.status === 200 || response.status === 0) {\n            return response;\n        }\n        return null;\n    },\n};\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,gBAAgB;AACvB,OAAO,IAAMA,sBAAsB,GAAG;EAClC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,eAAe;IAAA,IAAAC,gBAAA,GAAAC,iBAAA,eAAAC,mBAAA,CAAAC,IAAA,CAAE,SAAAC,QAAAC,IAAA;MAAA,IAAAC,QAAA;MAAA,OAAAJ,mBAAA,CAAAK,IAAA,UAAAC,SAAAC,QAAA;QAAA;UAAA,QAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAASL,QAAQ,GAAAD,IAAA,CAARC,QAAQ;cAAA,MAC1BA,QAAQ,CAACM,MAAM,KAAK,GAAG,IAAIN,QAAQ,CAACM,MAAM,KAAK,CAAC;gBAAAH,QAAA,CAAAE,IAAA;gBAAA;cAAA;cAAA,OAAAF,QAAA,CAAAI,MAAA,WACzCP,QAAQ;YAAA;cAAA,OAAAG,QAAA,CAAAI,MAAA,WAEZ,IAAI;YAAA;YAAA;cAAA,OAAAJ,QAAA,CAAAK,IAAA;UAAA;QAAA;MAAA,GAAAV,OAAA;IAAA,CACd;IAAA,SAAAL,gBAAAgB,EAAA;MAAA,OAAAf,gBAAA,CAAAgB,KAAA,OAAAC,SAAA;IAAA;IAAA,OAAAlB,eAAA;EAAA;AACL,CAAC"},"metadata":{},"sourceType":"module"}