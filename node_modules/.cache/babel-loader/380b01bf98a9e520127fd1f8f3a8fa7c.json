{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/Bhargav Ayare/Documents/GitHub/invoice2/node_modules/@babel/runtime/regenerator/index.js\";\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport { getBlobFromURL } from './getBlobFromURL';\nimport { embedResources } from './embedResources';\nimport { getMimeType, isDataUrl, makeDataUrl, toArray } from './util';\nfunction embedBackground(clonedNode, options) {\n  var _a;\n  return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var background;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            background = (_a = clonedNode.style) === null || _a === void 0 ? void 0 : _a.getPropertyValue('background');\n            if (background) {\n              _context.next = 3;\n              break;\n            }\n            return _context.abrupt(\"return\", Promise.resolve(clonedNode));\n          case 3:\n            return _context.abrupt(\"return\", Promise.resolve(background).then(function (cssString) {\n              return embedResources(cssString, null, options);\n            }).then(function (cssString) {\n              clonedNode.style.setProperty('background', cssString, clonedNode.style.getPropertyPriority('background'));\n              return clonedNode;\n            }));\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n}\nfunction embedImageNode(clonedNode, options) {\n  return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    var src;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!(!(clonedNode instanceof HTMLImageElement && !isDataUrl(clonedNode.src)) && !(clonedNode instanceof SVGImageElement && !isDataUrl(clonedNode.href.baseVal)))) {\n              _context2.next = 2;\n              break;\n            }\n            return _context2.abrupt(\"return\", Promise.resolve(clonedNode));\n          case 2:\n            src = clonedNode instanceof HTMLImageElement ? clonedNode.src : clonedNode.href.baseVal;\n            return _context2.abrupt(\"return\", Promise.resolve(src).then(function (url) {\n              return getBlobFromURL(url, options);\n            }).then(function (data) {\n              return makeDataUrl(data.blob, getMimeType(src) || data.contentType);\n            }).then(function (dataURL) {\n              return new Promise(function (resolve, reject) {\n                clonedNode.onload = resolve;\n                clonedNode.onerror = reject;\n                if (clonedNode instanceof HTMLImageElement) {\n                  clonedNode.srcset = '';\n                  clonedNode.src = dataURL;\n                } else {\n                  clonedNode.href.baseVal = dataURL;\n                }\n              });\n            }).then(function () {\n              return clonedNode;\n            }, function () {\n              return clonedNode;\n            }));\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n}\nfunction embedChildren(clonedNode, options) {\n  return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n    var children, deferreds;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            children = toArray(clonedNode.childNodes); // eslint-disable-next-line no-use-before-define\n            deferreds = children.map(function (child) {\n              return embedImages(child, options);\n            });\n            return _context3.abrupt(\"return\", Promise.all(deferreds).then(function () {\n              return clonedNode;\n            }));\n          case 3:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n}\nexport function embedImages(clonedNode, options) {\n  return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            if (clonedNode instanceof Element) {\n              _context4.next = 2;\n              break;\n            }\n            return _context4.abrupt(\"return\", Promise.resolve(clonedNode));\n          case 2:\n            return _context4.abrupt(\"return\", Promise.resolve(clonedNode).then(function (node) {\n              return embedBackground(node, options);\n            }).then(function (node) {\n              return embedImageNode(node, options);\n            }).then(function (node) {\n              return embedChildren(node, options);\n            }));\n          case 3:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n}","map":{"version":3,"mappings":"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","names":["getBlobFromURL","embedResources","getMimeType","isDataUrl","makeDataUrl","toArray","embedBackground","clonedNode","options","background","style","getPropertyValue","_context","Promise","resolve","then","cssString","setProperty","getPropertyPriority","embedImageNode","HTMLImageElement","src","SVGImageElement","href","baseVal","_context2","url","data","blob","contentType","dataURL","reject","onload","onerror","srcset","embedChildren","children","childNodes","deferreds","map","child","embedImages","all","Element","_context4","node"],"sources":["../src/embedImages.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}